@using DigitalPurchasing.Core
@inject SignInManager<User> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills nav-stacked">
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-page="./Index">Профиль</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a id="change-password" asp-page="./ChangePassword">Пароль</a></li>
    <li class="@ManageNavPages.AnalysisVariantsNavClass(ViewContext)"><a asp-page="./AnalysisVariants">Выбор поставщиков</a></li>
    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a id="external-login" asp-page="./ExternalLogins">External logins</a></li>
    }
    @if (User.IsInRole(Consts.Roles.CompanyOwner))
    {
        <li class="@ManageNavPages.CompanyNavClass(ViewContext)"><a asp-page="./Company">Организация</a></li>
        <li class="@ManageNavPages.UsersNavClass(ViewContext)"><a asp-page="./Users">Сотрудники</a></li>
    }
</ul>
