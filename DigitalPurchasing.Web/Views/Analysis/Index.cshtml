@model DigitalPurchasing.Web.ViewModels.Analysis.AnalysisIndexVm
@{
    ViewData["Title"] = "Варианты выбора поставщика";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="with-button">@ViewData["Title"]</h2>
<div class="btn-group">
    <a class="btn btn-default" href="@Url.Action("Edit", "CompetitionList", new { id = Model.ClId })">Конкурентный лист</a>
    <a class="btn btn-default" href="@Url.Action("Details", "Analysis", new { Model.ClId })">Подробности</a>
</div>
<div id="app">
    <h3>Стоимость закупки в разбивке по поставщикам</h3>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Варианты</th>
                <th v-for="supplier in orderedSuppliers">{{supplier.name}}</th>
                <th>ИТОГО</th>
                <th>Кол-во<br />поставщиков</th>
            </tr>
        </thead>
        <tfoot>
            <tr>
                <th></th>
                <td v-for="supplier in orderedSuppliers"></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th>Отсрочка, дней</th>
                <td v-for="supplier in orderedSuppliers">{{supplier.payWithinDays}}</td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th>Условия доставки</th>
                <td v-for="supplier in orderedSuppliers">{{supplier.deliveryTermsStr}}</td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th>Срок поставки не позже, чем в запросе?</th>
                <td v-for="supplier in orderedSuppliers">{{isDeliveryDataLessOrEqual(supplier.deliveryDate, customerDeliveryDate) | formatBool}}</td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th>Срок поставки в КП</th>
                <td v-for="supplier in orderedSuppliers">{{supplier.deliveryDate | formatDate}}</td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <th>Срок поставки в запросе</th>
                <td v-for="supplier in orderedSuppliers">{{customerDeliveryDate | formatDate}}</td>
                <td></td>
                <td></td>
            </tr>
        </tfoot>
        <tbody>
            <tr v-for="(variant, index) in orderedVariants" v-if="orderedVariants.length>0">
                <td>
                    <p>Вариант {{(index+1)}}</p>
                    <p class="help-block">Доля в итого, %</p>
                </td>
                <td v-if="isSuccess(variant)" v-for="result in getOrderedVariantResults(variant.results)">
                    <p>{{result.total | dontShowZero}}</p>
                    <p class="help-block">{{supplierTotalPerc(result.total, suppliersTotal(variant.results)) | percentage}}</p>
                </td>
                <td v-if="isSuccess(variant)">{{suppliersTotal(variant.results)}}</td>
                <td v-if="isSuccess(variant)">{{suppliersCount(variant.results)}}</td>
                <td v-if="!isSuccess(variant)" :colspan="variant.results.length+2">
                    <p class="text-center">Предложенные условия не соответствуют параметрам выбора</p>
                </td>
            </tr>
            <tr v-if="orderedVariants.length === 0" class="text-center">
                <td colspan="6"><button type="button" class="btn btn-primary" v-on:click="variantAdded">Добавить вариант</button></td>
            </tr>
        </tbody>
    </table>
    <div style="margin-bottom: 20px;" v-if="orderedVariants.length>0">
        <button type="button" class="btn btn-primary" v-on:click="variantAdded">Добавить вариант</button>
    </div>
    <div class="long-table-wrap" v-if="orderedVariants.length>0">
        <div class="long-table">
            <analysis-variant
                v-for="(variant, index) in orderedVariants"
                v-on:changed="variantChanged(variant.id)"
                v-on:deleted="variantDeleted(variant.id)"
                :key="variant.id"
                :index="index"
                :id="variant.id">
            </analysis-variant>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="~/Views/Shared/Variants/_VariantComponent.cshtml" />
    <script>
        (function() {
            var app = new Vue({
                el: '#app',
                data: function() {
                    return {
                        dateFormat: 'DD.MM.YYYY',
                        suppliers: [],
                        variants: [],
                        customerDeliveryDate: null
                    };
                },
                computed: {
                    orderedSuppliers: function() {
                        return _.orderBy(this.suppliers, 'order');
                    },
                    orderedVariants: function() {
                        return _.orderBy(this.variants, function(url) {
                            return new Date(url.createdOn);
                        }, ['asc']);
                    }
                },
                created: function() {
                    this.loadData();
                },
                watch: {
                    variants: function(val) {
                        if (val.length === 0) {
                            this.loadData();
                        }
                    }
                },
                filters: {
                    percentage: function(value) {
                        if (!isNumber(value)) return value;
                        if (value === 0) return '';
                        value = value.toFixed(2);
                        return value + '%';
                    },
                    dontShowZero: function(value) {
                        if (!isNumber(value)) return value;
                        return value === 0 ? '' : value;
                    },
                    formatDate: function(value) {
                        if (value) {
                            return moment(String(value)).format('DD.MM.YYYY');
                        }
                        return value;
                    },
                    formatBool: function(value) {
                        if (value === '') return '';
                        return value ? 'Да' : 'Нет';
                    }
                },
                methods: {
                    getSupplierOrder: function(id) {
                        return _.find(this.suppliers, ['id', id]);
                    },
                    getOrderedVariantResults: function(results) {
                        return _.orderBy(results, 'order');
                    },
                    suppliersTotal: function(results) {
                        return _.sumBy(results, 'total');
                    },
                    suppliersCount: function(results) {
                        return _.filter(results, function(r) { return r.total > 0; }).length;
                    },
                    supplierTotalPerc: function(result, total) {
                        if (result === 0 || total === 0) return 0;
                        return result / total * 100;
                    },
                    isSuccess: function(variant) {
                        return this.suppliersTotal(variant.results) > 0;
                    },
                    isDeliveryDataLessOrEqual: function(deliveryDate, requestDate) {
                        if (deliveryDate && requestDate) {
                            return deliveryDate <= requestDate;
                        }
                        return '';
                    },
                    loadData: function() {
                        var vm = this;
                        this.$http.get('@Url.Action("Data", "Analysis", new {clId = Model.ClId})').then(function(response) {
                                var data = response.body;
                                vm.suppliers = data.suppliers;
                                vm.variants = data.variants;
                                vm.customerDeliveryDate = data.customerDeliveryDate;
                        },
                        function(response) {
                            alert('Ошибка загрузки');
                        });
                    },
                    variantAdded: function() {
                        console.info('added');
                        var vm = this;
                        this.$http.post('@Url.Action("AddVariant", "Analysis", new {clId = Model.ClId})').then(function(response) {
                            var data = response.body;
                            vm.variants.push(data.variants[0]);
                        }, function(response) {
                            alert('Ошибка при созданит варианта');
                        });
                    },
                    variantChanged: function(id) {
                        console.info('changed'+id);
                        this.loadData();
                    },
                    variantDeleted: function(id) {
                        console.info('deleted'+id);
                        this.variants = _.remove(this.variants, function(v) {
                            return v.id !== id;
                        });
                    }
                }
            });
        })();

    </script>
}
