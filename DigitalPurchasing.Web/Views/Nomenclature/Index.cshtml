@model object

@{
    ViewData["Title"] = "Наименования материалов";
}

<div id="app">

    <a asp-action="Create" class="btn btn-default">Создать</a>
    <a asp-action="Template" class="btn btn-link">Скачать шаблон</a>

    <form method="post" enctype="multipart/form-data" asp-action="UploadTemplate" asp-controller="Nomenclature">
        <label class="btn btn-default btn-file">
            Загрузить заполненный шаблон <input type="file" style="display: none;" name="file">
        </label>
    </form>

    <vuetable ref="vuetable"
              api-url="@Url.Action("Data")"
              :fields="fields"
              :sort-order="sortOrder"
              pagination-path=""
              detail-row-component="row-details"
              :css="css"
              @@vuetable:pagination-data="onPaginationData"
              @@vuetable:cell-clicked="onCellClicked">
        <div slot="slot-actions" slot-scope="props">
            <div class="btn-group" role="group" aria-label="...">
                <a class="btn btn-default" :href="props.rowData.editUrl"><i class="far fa-edit"></i></a>
                <button type="button" class="btn btn-default" @@click="deleteRow(props.rowData, props.rowIndex)"><i class="far fa-trash-alt"></i></button>
            </div>
        </div>
    </vuetable>
    <div>
        <vuetable-pagination-info ref="paginationInfo"
                                  info-class="pull-left"
                                  :css="css.pagination">
        </vuetable-pagination-info>
        <vuetable-pagination ref="pagination"
                             :css="css.pagination"
                             @@vuetable-pagination:change-page="onChangePage">
        </vuetable-pagination>
    </div>
</div>

<template id="row-details">
    <vuetable ref="vuetable-d"
              api-url="@Url.Action("Data")"
              :fields="fields"
              :sort-order="sortOrder"
              pagination-path=""
              :css="css">
    </vuetable>
</template>

@section Scripts {
    <script>
        $(document).on('change', ':file', function () {
            $(this).parents('form').submit();
        });
    </script>
    <script>
        (function () {
            Vue.use(Vuetable);

            Vue.component('row-details', {
                props: {
                    rowData: {
                        type: Object,
                        required: true
                    },
                    rowIndex: {
                        type: Number
                    }
                },
                template: '#row-details',
                data: function() {
                    return {
                        css: css,
                        fields: [
                            {
                                title: 'Категория',
                                name: 'categoryName',
                                sortField: 'Category.Name'
                            },
                            {
                                title: 'Код',
                                name: 'code',
                                sortField: 'Code'
                            },
                            {
                                title: 'Наименование',
                                name: 'name',
                                sortField: 'Name'
                            },
                            {
                                title: 'Наименование (eng)',
                                name: 'nameEng',
                                sortField: 'NameEng'
                            },
                            {
                                title: 'ЕИ',
                                name: 'batchUomName',
                                sortField: 'BatchUom.Name'
                            },
                            {
                                title: 'ЕИ массы',
                                name: 'massUomName',
                                sortField: 'MassUomName.Name'
                            },
                            {
                                title: 'Масса 1 ЕИ, ЕИ массы',
                                name: 'massUomValue',
                                sortField: 'MassUomName.Value'
                            },
                            {
                                title: 'Название ресурса',
                                name: 'resourceUomName',
                                sortField: 'ResourceUom.Name'
                            },
                            {
                                title: 'Ресурс, 1 ЕИ ресурса',
                                name: 'resourceUomValue',
                                sortField: 'ResourceUom.Value'
                            },
                            {
                                title: 'ЕИ ресурса',
                                name: 'resourceBatchUomName',
                                sortField: 'ResourceBatchUom.Name'
                            }
                        ],
                        sortOrder: [
                            {
                                field: 'name',
                                direction: 'asc'
                            }
                        ]
                    };
                }
            });

            window.app = new Vue({
                el: '#app',
                data: function () {
                    return {
                        css: cssTable,
                        fields: [
                            {
                                title: 'Категория',
                                name: 'categoryName',
                                sortField: 'Category.Name'
                            },
                            {
                                title: 'Код',
                                name: 'code',
                                sortField: 'Code'
                            },
                            {
                                title: 'Наименование',
                                name: 'name',
                                sortField: 'Name'
                            },
                            {
                                title: 'Наименование (eng)',
                                name: 'nameEng',
                                sortField: 'NameEng'
                            },
                            {
                                title: 'ЕИ',
                                name: 'batchUomName',
                                sortField: 'BatchUom.Name'
                            },
                            {
                                title: 'ЕИ массы',
                                name: 'massUomName',
                                sortField: 'MassUom.Name'
                            },
                            {
                                title: 'Масса 1 ЕИ, ЕИ массы',
                                name: 'massUomValue',
                                sortField: 'MassUomValue'
                            },
                            {
                                title: 'Название ресурса',
                                name: 'resourceUomName',
                                sortField: 'ResourceUom.Name'
                            },
                            {
                                title: 'Ресурс, 1 ЕИ ресурса',
                                name: 'resourceUomValue',
                                sortField: 'ResourceUomValue'
                            },
                            {
                                title: 'ЕИ ресурса',
                                name: 'resourceBatchUomName',
                                sortField: 'ResourceBatchUom.Name'
                            },
                            {
                                name: 'slot-actions',
                                title: 'Действия',
                                titleClass: 'text-center',
                                dataClass: 'text-center'
                            }
                        ],
                        sortOrder: [
                            {
                                field: 'name',
                                direction: 'asc'
                            }
                        ]
                    };
                },
                methods: {
                    onPaginationData(paginationData) {
                        this.$refs.pagination.setPaginationData(paginationData);
                        this.$refs.paginationInfo.setPaginationData(paginationData);
                    },
                    onChangePage(page) {
                        this.$refs.vuetable.changePage(page);
                    },
                    onCellClicked(dataItem, field, event) {
                        this.$refs.vuetable.toggleDetailRow(dataItem.data.id);
                    },
                    editRow(rowData, rowIndex) {

                    },
                    deleteRow(rowData, rowIndex) {

                    }
                }
            });
        })();
    </script>
}
