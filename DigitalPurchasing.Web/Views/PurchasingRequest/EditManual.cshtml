@using DigitalPurchasing.Core.Interfaces
@model DigitalPurchasing.Core.Interfaces.PurchasingRequestDetailsResponse

@{
    ViewBag.Title = $"Заявка № {Model.PublicId} от {Model.CreatedOn:dd.MM.yyyy HH:mm}";
    Layout = "_Layout";
}

<h2>@ViewBag.Title</h2>

<div id="app">
    <table class="table table-striped">
        <thead>
        <tr>
            <th style="width: 5%" class="text-center">№</th>
            <th style="width: 20%">Код</th>
            <th>Наименование</th>
            <th style="width: 10%">ЕИ</th>
            <th style="width: 10%">Количество</th>
            <th style="width: 10%"></th>
        </tr>
        </thead>
        <tbody>
        <tr v-for="r in rows">
            <td class="text-center">
                <label>{{getRowIndex(r)}}</label>
            </td>
            <td><input type="text" class="form-control" v-model="r.code" /></td>
            <td><input type="text" class="form-control" v-model="r.name" /></td>
            <td><input type="text" class="form-control" v-model="r.uom" /></td>
            <td><input type="number" class="form-control" v-model="r.qty" /></td>
            <td>
                <button type="button" class="btn btn-default" v-on:click="removeRow(r)" v-if="getRowIndex(r)>1"><i class="far fa-minus-square"></i></button>
                <button type="button" class="btn btn-default" v-on:click="addRow(r)"><i class="far fa-plus-square"></i></button>
            </td>
        </tr>
        </tbody>
    </table>
</div>

@section Scripts
{
    <script>
        (function() {
            var app = new Vue({
                el: '#app',
                data: function() {
                    return {
                        // { code: '123-321', name: 'Болт 123-321 XYZ', uom: 'шт.', qty: 100 }
                        rows: []
                    };
                },
                created: function () {
                    var $this = this;
                    this.$http.get('@Url.Action("RawItemsData", new { id = Model.Id })').then(response => {
                        var data = response.body;
                        $this.rows = data.items;
                    }, response => {
                        alert('error');
                    });
                },
                methods: {
                    getRowIndex0: function (item) {
                        return this.rows.indexOf(item);
                    },
                    getRowIndex: function(item) {
                        return this.getRowIndex0(item)+1;
                    },
                    addRow: function(item) {
                        var index = this.getRowIndex(item);
                        var newRow = { code: '', name: '', uom: '', qty: 0 };
                        this.rows.splice(index, 0, newRow);
                    },
                    removeRow: function(item) {
                        var index = this.rows.indexOf(item);
                        this.rows.splice(index, 1);
                    }
                }
            });
        })();
    </script>
}
