
@{
    ViewData["Title"] = "Запросы предложений";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewData["Title"]</h2>

<div id="app">
    <vuetable ref="vuetable"
              api-url="@Url.Action("Data")"
              :fields="fields"
              :sort-order="sortOrder"
              pagination-path=""
              no-data-template="Нет данных"
              :css="css"
              @@vuetable:pagination-data="onPaginationData">
        <div slot="slot-actions" slot-scope="props">
            <div class="btn-group" role="group" aria-label="...">
                <a class="btn btn-default" :href="props.rowData.editUrl"><i class="far fa-edit"></i></a>
                <button type="button" class="btn btn-default" @@click="deleteRow(props.rowData, props.rowIndex)"><i class="far fa-trash-alt"></i></button>
            </div>
        </div>
    </vuetable>
    <div>
        <vuetable-pagination-info ref="paginationInfo"
                                  info-template="Показано с {from} по {to} из {total}"
                                  no-data-template="Нет данных"
                                  info-class="pull-left"
                                  :css="css.pagination">
        </vuetable-pagination-info>
        <vuetable-pagination ref="pagination"
                             :css="css.pagination"
                             @@vuetable-pagination:change-page="onChangePage">
        </vuetable-pagination>
    </div>
    <modal v-model="modalDelete" title="Удаление">
        <p>Вы уверены что хотите удалить запрос <b>№{{modalData.name}}</b>?<br />Это действие нельзя отменить.</p>
        <div slot="footer">
            <button v-on:click="deleteOk" class="btn btn-danger">Удалить</button>
            <button v-on:click="deleteCancel" class="btn btn-default">Отмена</button>
        </div>
    </modal>
</div>

@section Scripts {
    <script>
        (function () {
            $(document).on('change', ':file', function () {
                $(this).parents('form').submit();
            });

            Vue.use(Vuetable);
            window.app = new Vue({
                el: '#app',
                data: function () {
                    return {
                        css: cssTable,
                        fields: [
                            {
                                title: 'Номер',
                                name: 'publicId',
                                sortField: 'PublicId',
                                titleClass: 'text-center w-140',
                                dataClass: 'text-center'
                            },
                            {
                                title: 'Дата создания',
                                name: 'createdOn',
                                sortField: 'CreatedOn',
                                formatter: this.formatDate,
                                titleClass: 'text-center w-180',
                                dataClass: 'text-center'
                            },
                            {
                                title: 'Номер заявки в ERP',
                                name: 'purchaseRequestErpCode',
                                sortField: 'PurchaseRequest.ErpCode',
                                titleClass: 'text-center w-180',
                                dataClass: 'text-center'
                            },
                            {
                                title: 'Клиент',
                                name: 'purchaseRequestCustomerName',
                                sortField: 'PurchaseRequest.CustomerName'
                            },
                            {
                                name: 'slot-actions',
                                title: 'Действия',
                                titleClass: 'text-center w-140',
                                dataClass: 'text-center'
                            }
                        ],
                        sortOrder: [{ field: 'PublicId', direction: 'desc' }],
                        modalDelete: false,
                        modalData: {
                            name: '',
                            id: null
                        }
                    };
                },
                methods: {
                    formatDate: function (value) {
                        if (value === null) return '';
                        return moment(value).format('DD.MM.YYYY H:mm');
                    },
                    onPaginationData(paginationData) {
                        this.$refs.pagination.setPaginationData(paginationData);
                        this.$refs.paginationInfo.setPaginationData(paginationData);
                    },
                    onChangePage(page) {
                        this.$refs.vuetable.changePage(page);
                    },
                    deleteRow: function (rowData, rowIndex) {
                        this.modalData.name = rowData.publicId;
                        this.modalData.id = rowData.id;
                        this.modalDelete = true;
                    },
                    deleteOk: function(id) {
                        var $this = this;
                        this.$http.post('@Url.Action("Delete")', { id: $this.modalData.id }).then(function(res) {
                            $this.$refs.vuetable.refresh();
                            $this.modalDelete = false;
                            if (!res.data.isSuccess) {
                                alert(res.data.data[0]);
                            }
                        }, function(res) {
                            $this.modalDelete = false;
                            alert('Ошибка удаления');
                        });
                    },
                    deleteCancel: function() {
                        this.modalDelete = false;
                    }
                }
            });
        })();
    </script>
}
