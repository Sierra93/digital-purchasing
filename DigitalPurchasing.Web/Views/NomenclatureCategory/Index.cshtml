@model object

@{
    ViewBag.Title = "Категории закупок";
}

<h2 class="with-button">@ViewBag.Title</h2>
<div class="btn-group">
    <a asp-action="Create" class="btn btn-default">Создать</a>
    <a asp-action="Template" class="btn btn-default">Скачать шаблон</a>
    <form method="post" enctype="multipart/form-data" asp-action="UploadTemplate" class="btn btn-default btn-file">
        <label>
            Загрузить заполненный шаблон
            <input type="file" style="display: none;" name="file">
        </label>
    </form>
</div>

<div id="app">
    <vuetable ref="vuetable"
              api-url="@Url.Action("Data")"
              :fields="fields"
              pagination-path=""
              no-data-template="Нет данных"
              :css="css"
              @@vuetable:load-success="loadSuccess"
              @@vuetable:pagination-data="onPaginationData">
        <div slot="slot-actions" slot-scope="props">
            <div class="btn-group" role="group" aria-label="...">
                <a class="btn btn-default" :href="props.rowData.editUrl"><i class="far fa-edit"></i></a>
                <button type="button" class="btn btn-default" @@click="deleteRow(props.rowData, props.rowIndex)"><i class="far fa-trash-alt"></i></button>
            </div>
        </div>
    </vuetable>
    <div>
        <vuetable-pagination-info ref="paginationInfo"
                                  info-template="Показано с {from} по {to} из {total}"
                                  no-data-template="Нет данных"
                                  info-class="pull-left"
                                  :css="css.pagination">
        </vuetable-pagination-info>
        <vuetable-pagination ref="pagination"
                             :css="css.pagination"
                             @@vuetable-pagination:change-page="onChangePage">
        </vuetable-pagination>
    </div>
    <modal v-model="modalDelete" title="Удаление">
        <p>Вы уверены что хотите удалить "<b>{{modalData.name}}</b>"?<br />Это действие нельзя отменить.</p>
        <div slot="footer">
            <button v-on:click="deleteOk" class="btn btn-danger">Удалить</button>
            <button v-on:click="deleteCancel" class="btn btn-default">Отмена</button>
        </div>
    </modal>
</div>

@section Styles {
    <style type="text/css">
        .w-100px {
            width: 100px;
        }
        .minw-15px {
            min-width: 15px;
        }
        .bg-white {
            background-color: white;
        }
        .border-0 {
            border: 0 !important;
        }
    </style>
}

@section Scripts {
    <script>
        (function () {
            Vue.use(Vuetable);

            window.app = new Vue({
                el: '#app',
                data: function () {
                    return {
                        css: cssTable,
                        fields: [
                            // All fields will be added dynamically
                        ],
                        modalDelete: false,
                        modalData: {
                            name: '',
                            id: null
                        }
                    }
                },
                methods: {
                    onPaginationData(paginationData) {
                        this.$refs.pagination.setPaginationData(paginationData);
                        this.$refs.paginationInfo.setPaginationData(paginationData);
                    },
                    onChangePage(page) {
                        this.$refs.vuetable.changePage(page);
                    },
                    deleteRow: function (rowData, rowIndex) {
                        this.modalData.name = rowData.name;
                        this.modalData.id = rowData.id;
                        this.modalDelete = true;
                    },
                    deleteOk: function(id) {
                        var $this = this;
                        this.$http.post('@Url.Action("Delete")', { id: $this.modalData.id }).then(function(res) {
                            $this.$refs.vuetable.refresh();
                            $this.modalDelete = false;
                        }, function(res) {
                            alert('Ошибка удаления');
                        });
                    },
                    deleteCancel: function() {
                        this.modalDelete = false;
                    },
                    loadSuccess: function (serverData) {
                        this.fields = [{
                            name: 'slot-actions',
                            title: 'Действия',
                            titleClass: 'text-center w-100px',
                            dataClass: 'text-center'
                        }];

                        var data = serverData.data.data;

                        (function ($this) {
                            var categoryColumnsCount = 0;

                            for (var i = 0; i < data.length; i++) {
                                categoryColumnsCount = Math.max(categoryColumnsCount, data[i].categoriyHiearchy.length);
                                for (var j = 0; j < data[i].categoriyHiearchy.length; j++) {
                                    data[i]['_categoryCol_' + j] = data[i].categoriyHiearchy[j].name;
                                }
                            }

                            for (var i = 0; i < categoryColumnsCount; i++) {
                                $this.fields.push({
                                    title: i == 0 ? 'Основная категория' : 'Подкатегория ' + i,
                                    name: '_categoryCol_' + i,
                                    titleClass: 'text-nowrap',
                                    dataClass: 'text-nowrap'
                                });
                            }
                        })(this);

                        (function ($this) {
                            var supplierColumnsCount = 0;

                            for (var i = 0; i < data.length; i++) {
                                supplierColumnsCount = Math.max(supplierColumnsCount, data[i].suppliers.length);
                                for (var j = 0; j < data[i].suppliers.length; j++) {
                                    data[i]['_supplierCol_' + j] = data[i].suppliers[j].name;
                                }
                            }

                            if (supplierColumnsCount > 0) {
                                $this.fields.push({
                                    title: '',
                                    name: 'separator',
                                    titleClass: 'minw-15px',
                                    dataClass: 'bg-white border-0'
                                });
                            }

                            for (var i = 0; i < supplierColumnsCount; i++) {
                                $this.fields.push({
                                    title: 'Поставщик ' + (i + 1),
                                    name: '_supplierCol_' + i,
                                    titleClass: 'text-nowrap',
                                    dataClass: 'text-nowrap'
                                });
                            }
                        })(this);
                    }
                }
            });
        })();
    </script>
}
