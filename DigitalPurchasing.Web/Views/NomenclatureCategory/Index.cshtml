@model object

@{
    ViewBag.Title = "Категории закупок";
}

<h2 class="with-button">@ViewBag.Title</h2>
<div class="btn-group">
    <a asp-action="Create" class="btn btn-default">Создать</a>
</div>

<div id="app">
    <vuetable ref="vuetable"
              api-url="@Url.Action("Data")"
              :fields="fields"
              :sort-order="sortOrder"
              pagination-path=""
              no-data-template="Нет данных"
              :css="css"
              @@vuetable:load-success="loadSuccess"
              @@vuetable:pagination-data="onPaginationData">
        <div slot="slot-actions" slot-scope="props">
            <div class="btn-group" role="group" aria-label="...">
                <a class="btn btn-default" :href="props.rowData.editUrl"><i class="far fa-edit"></i></a>
                <button type="button" class="btn btn-default" @@click="deleteRow(props.rowData, props.rowIndex)"><i class="far fa-trash-alt"></i></button>
            </div>
        </div>
    </vuetable>
    <div>
        <vuetable-pagination-info ref="paginationInfo"
                                  info-template="Показано с {from} по {to} из {total}"
                                  no-data-template="Нет данных"
                                  info-class="pull-left"
                                  :css="css.pagination">
        </vuetable-pagination-info>
        <vuetable-pagination ref="pagination"
                             :css="css.pagination"
                             @@vuetable-pagination:change-page="onChangePage">
        </vuetable-pagination>
    </div>
    <modal v-model="modalDelete" title="Удаление">
        <p>Вы уверены что хотите удалить "<b>{{modalData.name}}</b>"?<br />Это действие нельзя отменить.</p>
        <div slot="footer">
            <button v-on:click="deleteOk" class="btn btn-danger">Удалить</button>
            <button v-on:click="deleteCancel" class="btn btn-default">Отмена</button>
        </div>
    </modal>
</div>


@section Scripts {
    <script>
        (function () {
            Vue.use(Vuetable);

            window.app = new Vue({
                el: '#app',
                data: function () {
                    return {
                        css: cssTable,
                        fields: [
                            // All fields will be added dynamically
                        ],
                        sortOrder: [
                            {
                                field: 'Name',
                                direction: 'asc'
                            }
                        ],
                        modalDelete: false,
                        modalData: {
                            name: '',
                            id: null
                        }
                    }
                },
                methods: {
                    onPaginationData(paginationData) {
                        this.$refs.pagination.setPaginationData(paginationData);
                        this.$refs.paginationInfo.setPaginationData(paginationData);
                    },
                    onChangePage(page) {
                        this.$refs.vuetable.changePage(page);
                    },
                    deleteRow: function (rowData, rowIndex) {
                        this.modalData.name = rowData.name;
                        this.modalData.id = rowData.id;
                        this.modalDelete = true;
                    },
                    deleteOk: function(id) {
                        var $this = this;
                        this.$http.post('@Url.Action("Delete")', { id: $this.modalData.id }).then(function(res) {
                            $this.$refs.vuetable.refresh();
                            $this.modalDelete = false;
                        }, function(res) {
                            alert('Ошибка удаления');
                        });
                    },
                    deleteCancel: function() {
                        this.modalDelete = false;
                    },
                    loadSuccess: function (serverData) {
                        this.fields = [
                            {
                                title: 'Название',
                                name: 'name',
                                sortField: 'Name'
                            },
                            {
                                title: 'Родитель',
                                name: 'parentName',
                                sortField: 'ParentName'
                            },
                            {
                                title: 'Полное название',
                                name: 'fullName',
                                sortField: 'FullName',
                                dataClass: 'text-nowrap'
                            },
                            {
                                name: 'slot-actions',
                                title: 'Действия',
                                titleClass: 'text-center',
                                dataClass: 'text-center'
                            }
                        ];

                        var supplierColumnsCount = 0;

                        var data = serverData.data.data;
                        for (var i = 0; i < data.length; i++) {
                            supplierColumnsCount = Math.max(supplierColumnsCount, data[i].suppliers.length);
                            for (var j = 0; j < data[i].suppliers.length; j++) {
                                data[i]['_supplierCol_' + j] = data[i].suppliers[j].name;
                            }
                        }

                        for (var i = 0; i < supplierColumnsCount; i++) {
                            this.fields.push({
                                title: 'Поставщик ' + (i + 1),
                                name: '_supplierCol_' + i,
                                titleClass: 'text-nowrap',
                                dataClass: 'text-nowrap'
                            });
                        }
                    }
                }
            });
        })();
    </script>
}
