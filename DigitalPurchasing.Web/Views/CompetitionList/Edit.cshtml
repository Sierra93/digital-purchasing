@using DigitalPurchasing.Core
@model DigitalPurchasing.Web.ViewModels.CompetitionList.CompetitionListEditVm

@{
    var cl = Model.CompetitionList;
    var hasErpCode = !string.IsNullOrEmpty(cl.PurchaseRequest.ErpCode);
    var hasInvoiceData = cl.SupplierOffers.Any(q => !string.IsNullOrEmpty(q.InvoiceData));
    ViewBag.Title = $"Конкурентный лист № {cl.PublicId} от {cl.CreatedOn:dd.MM.yyyy HH:mm}";
    Layout = "_Layout";
}

<h2 class="with-button">@ViewBag.Title</h2>
<div class="btn-group">
    <form class="form-button" method="post" enctype="multipart/form-data" asp-action="Upload" asp-controller="CompetitionList" asp-route-id="@cl.Id">
        <label class="btn btn-default btn-file">
            Загрузить предложение <input type="file" style="display: none;" name="file">
        </label>
    </form>
    <a class="btn btn-default" href="@Url.Action("Index", "Analysis", new { clId = cl.Id })">Варианты выбора</a>
    <a class="btn btn-default" href="@Url.Action("Details", "Analysis", new { clId = cl.Id })">Детальный анализ</a>
</div>
<div id="app">
    <div class="long-table-wrap">
        <div class="long-table">
            <div class="long-table-item">
                <div>
                    <p>
                        <b>Клиент: @cl.PurchaseRequest.CustomerName</b>&nbsp;
                        <a asp-action="Edit" asp-controller="PurchaseRequest" asp-route-id="@cl.PurchaseRequest.Id">@($"Заявка № {cl.PurchaseRequest.PublicId} от {cl.PurchaseRequest.CreatedOn:dd.MM.yyyy HH:mm}")</a>
                    </p>
                    @if (hasErpCode)
                    {<p>Номер заявки в ERP - @cl.PurchaseRequest.ErpCode</p>}
                    @if (!hasErpCode && hasInvoiceData)
                    {<p>&nbsp;</p>}
                </div>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <td>№</td>
                            <td>Код</td>
                            <td>Наименование</td>
                            <td>ЕИ</td>
                            <td>Кол-во для<br />заказа, ЕИ</td>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td>@cl.PurchaseRequest.Items.Sum(q => q.RawQty).ToString(Consts.Format.Qty)</td>
                        </tr>
                        <tr>
                            <td colspan="5">
                                <p>&nbsp;</p>
                            </td>
                        </tr>
                    </tfoot>
                    <tbody>
                        @foreach (var item in cl.PurchaseRequest.Items)
                        {
                            <tr>
                                <td>@item.Position</td>
                                <td>@item.RawCode</td>
                                <td>@item.RawName</td>
                                <td>@item.RawUom</td>
                                <td>@item.RawQty.ToString(Consts.Format.Qty)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            @foreach (var so in cl.SupplierOffers)
            {
                var soTitle = $"КП № {so.PublicId} от {so.CreatedOn:dd.MM.yyyy HH:mm}";
                <div class="long-table-item">
                    <div>
                        <p>
                            <b>Поставщик: @(so.SupplierName ?? "Не указан")</b>&nbsp;
                            <a asp-action="Edit" asp-controller="SupplierOffer" asp-route-id="@so.Id">@soTitle</a>
                        </p>
                        @if (hasErpCode || (hasInvoiceData && string.IsNullOrEmpty(so.InvoiceData)))
                        {<p>&nbsp;</p>}
                        @if (!string.IsNullOrEmpty(so.InvoiceData))
                        {<p>№ КП/cчета у поставщика - @so.InvoiceData</p>}
                    </div>
                    <table class="table table-striped with-left-border">
                        <thead>
                            <tr>
                                <td>Код</td>
                                <td>Наименование</td>
                                <td>ЕИ</td>
                                <td>Кол-во,<br />ЕИ</td>
                                <td>Цена за ЕИ,<br />валюта</td>
                                <td>Валюта</td>
                                <td>Стоимость,<br />валюта</td>
                            </tr>
                        </thead>
                        <tfoot>
                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td>@so.Items.Sum(q => q.Offer.Qty).ToString(Consts.Format.Qty)</td>
                                <td></td>
                                <td></td>
                                <td>@so.Items.Sum(q => q.Offer.TotalPrice).ToString(Consts.Format.Money2)</td>
                            </tr>
                            <tr>
                                <td colspan="7">
                                    <so-terms :so="'@so.Id'"></so-terms>
                                </td>
                            </tr>
                        </tfoot>
                        <tbody>
                            @foreach (var item in so.Items)
                            {
                                if (item.Offer.Qty > 0)
                                {
                                    <tr>
                                        <td>@item.Offer.Code</td>
                                        <td>@item.Offer.Name</td>
                                        <td>@item.Offer.Uom</td>
                                        <td>@item.Offer.Qty.ToString(Consts.Format.Qty)</td>
                                        <td>@item.Offer.Price.ToString(Consts.Format.Money2)</td>
                                        <td>@item.Offer.Currency</td>
                                        <td>@item.Offer.TotalPrice.ToString(Consts.Format.Money2)</td>
                                    </tr>
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="7" style="text-align: center;">Не сопоставлено</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            }
            <div class="long-table-item">
                <div>
                    <p>Расчет целевых цен для отправки запроса на понижение</p>
                </div>
                <table class="table table-striped with-left-border">
                    <thead>
                        <tr>
                            <td>Минимальная<br />цена</td>
                            <td>Целевая цена,<br />валюта за ЕИ поставщика</td>
                            <td>Целевая скидка<br />к минимальной цене, %</td>
                            <td v-for="supplier in prSuppliers" class="text-center">
                                <div>{{supplier.name}}</div>
                                <label class="checkbox-inline">
                                    <input type="checkbox"
                                           v-model="supplier.isChecked"
                                           v-on:change="prToggleSupplier(supplier.id, !supplier.isChecked)" />
                                </label>
                            </td>
                        </tr>
                    </thead>
                    <tfoot>
                        <tr>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td v-for="supplier in prSuppliers"></td>
                        </tr>
                    </tfoot>
                    <tbody>
                        <tr v-for="item in prItems" v-if="item.minPrice > 0">
                            <td class="align-right">{{item.minPrice | formatMoney}}</td>
                            <td>
                                <input class="form-control input-sm h-20" type="number" min="0"
                                       v-model="item.targetPrice" v-on:change="onChangeTargetPrice($event, item)" />
                            </td>
                            <td>
                                <input class="form-control input-sm h-20" type="number" min="0"
                                       v-model="item.discount" v-on:change="onChangeDiscount($event, item)" />
                            </td>
                            <td v-for="itemSupplier in item.suppliers" class="text-center">
                                <div class="checkbox m-0">
                                    <label class="checkbox-inline" v-if="itemSupplier.isEnabled">
                                        <input type="checkbox" v-model="itemSupplier.isChecked">
                                    </label>
                                </div>
                            </td>
                        </tr>
                        <tr v-else>
                            <td colspan="7" style="text-align: center;">Не сопоставлено</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <vc:competition-list-report cl-id="Model.CompetitionList.Id"></vc:competition-list-report>
</div>

@section Scripts
{
    <partial name="~/Views/CompetitionList/_EditSOTermsComponent.cshtml"/>
    <script>
        (function() {
            var vue = new Vue({
                el: '#app',
                data: function() {
                    return {
                        prItems: [],
                        prSuppliers: [],
                        prRequests: []
                    }
                },
                created: function() {
                    var vm = this;
                    var getUrl = '@Url.Action("PriceReductionData", new {id = Model.CompetitionList.Id})';
                    vm.$http.get(getUrl).then( function(res) {
                        var data = res.body;
                        vm.prItems = data.items;
                        vm.prSuppliers = data.suppliers;
                    }, function(res) {
                        alert('error');
                    });
                },
                watch: {
                },
                filters: {
                    formatMoney: function(value) {
                        if (isNumber(value)) {
                            if (value === 0) return '';
                            return numeral(value).format('0,0');
                        }
                        return value;
                    }
                },
                methods: {
                    supplierChangeEnabled(itemId, supplierId) {
                        var vm = this;
                        var itemIndex = _.findIndex(vm.prItems, ['id', itemId]);
                        var supplierIndex = vm.prItems[itemIndex].suppliers.indexOf(supplierId);
                        return supplierIndex !== -1;
                    },
                    prToggleSupplier: function (supplierId, value) {
                        var vm = this;
                        _.each(vm.prItems, function(i) {
                            _.each(i.suppliers, function(s) {
                                if (s.id === supplierId) {
                                    s.isChecked = !value;
                                }
                            });
                        });
                    },
                    onChangeTargetPrice(event, item) {
                        var targetPrice = event.target.value;
                        var discount = (1 - (targetPrice/item.minPrice)) * 100;
                        item.discount = _.round(discount, 2);
                    },
                    onChangeDiscount(event, item) {
                        var discount = event.target.value;
                        var targetPrice = item.minPrice * (1 - (discount / 100));
                        item.targetPrice = _.round(targetPrice, 2);
                    }
                }
            });
        })();
    </script>
}
