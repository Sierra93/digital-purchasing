@model object

@{
    ViewData["Title"] = "Клиенты";
}

<h2 class="with-button">@ViewBag.Title</h2>
<div class="btn-group">
    <a asp-action="Create" class="btn btn-default">Создать</a>
</div>

<div id="app">
    <div class="row" style="margin-bottom: 10px">
        <div class="col-xs-12 col-sm-8 col-md-6 col-lg-4">
            <div class="input-group">
                <input type="text" class="form-control" placeholder="Поиск" v-model="search">
                <span class="input-group-btn">
                    <button class="btn btn-default" type="button" v-on:click="resetSearch">x</button>
                </span>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            <vuetable ref="vuetable"
                      api-url="@Url.Action("Data")"
                      :per-page="20"
                      :fields="fields"
                      :sort-order="sortOrder"
                      :query-params="getQueryParams"
                      pagination-path=""
                      no-data-template="Нет данных"
                      :css="css"
                      @@vuetable:pagination-data="onPaginationData">
                <div slot="slot-actions" slot-scope="props">
                    <div class="btn-group" role="group" aria-label="...">
                        <a class="btn btn-default" :href="props.rowData.editUrl"><i class="far fa-edit"></i></a>
                        <button type="button" class="btn btn-default" @@click="deleteRow(props.rowData, props.rowIndex)"><i class="far fa-trash-alt"></i></button>
                    </div>
                </div>
            </vuetable>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            <vuetable-pagination-info ref="paginationInfo"
                                      info-template="Показано с {from} по {to} из {total}"
                                      no-data-template="Нет данных"
                                      info-class="pull-left"
                                      :css="css.pagination">
            </vuetable-pagination-info>
            <vuetable-pagination ref="pagination"
                                 :css="css.pagination"
                                 @@vuetable-pagination:change-page="onChangePage">
            </vuetable-pagination>
        </div>
    </div>
    <modal v-model="modalDelete" title="Удаление">
        <p>Вы уверены что хотите удалить "<b>{{modalData.name}}</b>"?<br />Это действие нельзя отменить.</p>
        <div slot="footer">
            <button v-on:click="deleteOk" class="btn btn-danger">Удалить</button>
            <button v-on:click="deleteCancel" class="btn btn-default">Отмена</button>
        </div>
    </modal>
</div>

@section Scripts {
    <script>
        (function () {
            Vue.use(Vuetable);

            window.app = new Vue({
                el: '#app',
                data: function () {
                    return {
                        css: cssTable,
                        fields: [
                            {
                                title: 'Название',
                                name: 'name',
                                sortField: 'Name'
                            },
                            {
                                name: 'slot-actions',
                                title: 'Действия',
                                titleClass: 'text-center',
                                dataClass: 'text-center'
                            }
                        ],
                        sortOrder: [
                            {
                                field: 'name',
                                direction: 'asc'
                            }
                        ],
                        search: null,
                        modalDelete: false,
                        modalData: {
                            name: '',
                            id: null
                        }
                    };
                },
                watch: {
                    search: _.debounce(function () {
                        this.$refs.vuetable.refresh();
                    }, 250)
                },
                methods: {
                    onPaginationData: function (paginationData) {
                        this.$refs.pagination.setPaginationData(paginationData);
                        this.$refs.paginationInfo.setPaginationData(paginationData);
                    },
                    onChangePage: function (page) {
                        this.$refs.vuetable.changePage(page);
                    },
                    getQueryParams(sortOrder, currentPage, perPage) {
                        return {
                            'sort': sortOrder[0].field + '|' + sortOrder[0].direction,
                            'page': currentPage,
                            'per_page': perPage,
                            's': this.search
                        };
                    },
                    resetSearch: function () {
                        this.search = null;
                    },
                    deleteRow: function (rowData, rowIndex) {
                        this.modalData.name = rowData.name;
                        this.modalData.id = rowData.id;
                        this.modalDelete = true;
                    },
                    deleteOk: function() {
                        var $this = this;
                        this.$http.post('@Url.Action(nameof(DigitalPurchasing.Web.Controllers.CustomerController.Delete))', { id: $this.modalData.id }).then(function(res) {
                            $this.$refs.vuetable.refresh();
                            $this.modalDelete = false;
                        }, function (res) {
                            if (res.body && res.body.reason == 'CUSTOMER_IN_USE') {
                                alert('Этого контрагента нельзя удалить');
                            } else {
                                alert('Ошибка удаления');
                            }
                        });
                    },
                    deleteCancel: function() {
                        this.modalDelete = false;
                    }
                }
            });
        })();
    </script>
}
